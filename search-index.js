var N = null;var searchIndex = {};
searchIndex["rustpython"]={"doc":"","items":[],"paths":[]};
searchIndex["rustpython_parser"]={"doc":"","items":[[0,"ast","rustpython_parser","Implement abstract syntax tree nodes for the python language.",N,N],[3,"Program","rustpython_parser::ast","",N,N],[12,"statements","","",0,N],[3,"SingleImport","","",N,N],[12,"module","","",1,N],[12,"symbol","","",1,N],[12,"alias","","",1,N],[3,"Located","","",N,N],[12,"location","","",2,N],[12,"node","","",2,N],[3,"WithItem","","",N,N],[12,"context_expr","","",3,N],[12,"optional_vars","","",3,N],[3,"Parameters","","",N,N],[12,"args","","",4,N],[12,"kwonlyargs","","",4,N],[12,"vararg","","",4,N],[12,"kwarg","","",4,N],[12,"defaults","","",4,N],[12,"kw_defaults","","",4,N],[3,"Comprehension","","",N,N],[12,"target","","",5,N],[12,"iter","","",5,N],[12,"ifs","","",5,N],[3,"Keyword","","",N,N],[12,"name","","",6,N],[12,"value","","",6,N],[3,"ExceptHandler","","",N,N],[12,"typ","","",7,N],[12,"name","","",7,N],[12,"body","","",7,N],[4,"Top","","",N,N],[13,"Program","","",8,N],[13,"Statement","","",8,N],[13,"Expression","","",8,N],[4,"Statement","","Abstract syntax tree nodes for python statements.",N,N],[13,"Break","","",9,N],[13,"Continue","","",9,N],[13,"Return","","",9,N],[12,"value","rustpython_parser::ast::Statement","",9,N],[13,"Import","rustpython_parser::ast","",9,N],[12,"import_parts","rustpython_parser::ast::Statement","",9,N],[13,"Pass","rustpython_parser::ast","",9,N],[13,"Assert","","",9,N],[12,"test","rustpython_parser::ast::Statement","",9,N],[12,"msg","","",9,N],[13,"Delete","rustpython_parser::ast","",9,N],[12,"targets","rustpython_parser::ast::Statement","",9,N],[13,"Assign","rustpython_parser::ast","",9,N],[12,"targets","rustpython_parser::ast::Statement","",9,N],[12,"value","","",9,N],[13,"AugAssign","rustpython_parser::ast","",9,N],[12,"target","rustpython_parser::ast::Statement","",9,N],[12,"op","","",9,N],[12,"value","","",9,N],[13,"Expression","rustpython_parser::ast","",9,N],[12,"expression","rustpython_parser::ast::Statement","",9,N],[13,"Global","rustpython_parser::ast","",9,N],[12,"names","rustpython_parser::ast::Statement","",9,N],[13,"Nonlocal","rustpython_parser::ast","",9,N],[12,"names","rustpython_parser::ast::Statement","",9,N],[13,"If","rustpython_parser::ast","",9,N],[12,"test","rustpython_parser::ast::Statement","",9,N],[12,"body","","",9,N],[12,"orelse","","",9,N],[13,"While","rustpython_parser::ast","",9,N],[12,"test","rustpython_parser::ast::Statement","",9,N],[12,"body","","",9,N],[12,"orelse","","",9,N],[13,"With","rustpython_parser::ast","",9,N],[12,"items","rustpython_parser::ast::Statement","",9,N],[12,"body","","",9,N],[13,"For","rustpython_parser::ast","",9,N],[12,"target","rustpython_parser::ast::Statement","",9,N],[12,"iter","","",9,N],[12,"body","","",9,N],[12,"orelse","","",9,N],[13,"Raise","rustpython_parser::ast","",9,N],[12,"exception","rustpython_parser::ast::Statement","",9,N],[12,"cause","","",9,N],[13,"Try","rustpython_parser::ast","",9,N],[12,"body","rustpython_parser::ast::Statement","",9,N],[12,"handlers","","",9,N],[12,"orelse","","",9,N],[12,"finalbody","","",9,N],[13,"ClassDef","rustpython_parser::ast","",9,N],[12,"name","rustpython_parser::ast::Statement","",9,N],[12,"body","","",9,N],[12,"bases","","",9,N],[12,"keywords","","",9,N],[12,"decorator_list","","",9,N],[13,"FunctionDef","rustpython_parser::ast","",9,N],[12,"name","rustpython_parser::ast::Statement","",9,N],[12,"args","","",9,N],[12,"body","","",9,N],[12,"decorator_list","","",9,N],[4,"Expression","rustpython_parser::ast","",N,N],[13,"BoolOp","","",10,N],[12,"a","rustpython_parser::ast::Expression","",10,N],[12,"op","","",10,N],[12,"b","","",10,N],[13,"Binop","rustpython_parser::ast","",10,N],[12,"a","rustpython_parser::ast::Expression","",10,N],[12,"op","","",10,N],[12,"b","","",10,N],[13,"Subscript","rustpython_parser::ast","",10,N],[12,"a","rustpython_parser::ast::Expression","",10,N],[12,"b","","",10,N],[13,"Unop","rustpython_parser::ast","",10,N],[12,"op","rustpython_parser::ast::Expression","",10,N],[12,"a","","",10,N],[13,"Yield","rustpython_parser::ast","",10,N],[12,"value","rustpython_parser::ast::Expression","",10,N],[13,"YieldFrom","rustpython_parser::ast","",10,N],[12,"value","rustpython_parser::ast::Expression","",10,N],[13,"Compare","rustpython_parser::ast","",10,N],[12,"a","rustpython_parser::ast::Expression","",10,N],[12,"op","","",10,N],[12,"b","","",10,N],[13,"Attribute","rustpython_parser::ast","",10,N],[12,"value","rustpython_parser::ast::Expression","",10,N],[12,"name","","",10,N],[13,"Call","rustpython_parser::ast","",10,N],[12,"function","rustpython_parser::ast::Expression","",10,N],[12,"args","","",10,N],[12,"keywords","","",10,N],[13,"Number","rustpython_parser::ast","",10,N],[12,"value","rustpython_parser::ast::Expression","",10,N],[13,"List","rustpython_parser::ast","",10,N],[12,"elements","rustpython_parser::ast::Expression","",10,N],[13,"Tuple","rustpython_parser::ast","",10,N],[12,"elements","rustpython_parser::ast::Expression","",10,N],[13,"Dict","rustpython_parser::ast","",10,N],[12,"elements","rustpython_parser::ast::Expression","",10,N],[13,"Set","rustpython_parser::ast","",10,N],[12,"elements","rustpython_parser::ast::Expression","",10,N],[13,"Comprehension","rustpython_parser::ast","",10,N],[12,"kind","rustpython_parser::ast::Expression","",10,N],[12,"generators","","",10,N],[13,"Starred","rustpython_parser::ast","",10,N],[12,"value","rustpython_parser::ast::Expression","",10,N],[13,"Slice","rustpython_parser::ast","",10,N],[12,"elements","rustpython_parser::ast::Expression","",10,N],[13,"String","rustpython_parser::ast","",10,N],[12,"value","rustpython_parser::ast::Expression","",10,N],[13,"Bytes","rustpython_parser::ast","",10,N],[12,"value","rustpython_parser::ast::Expression","",10,N],[13,"Identifier","rustpython_parser::ast","",10,N],[12,"name","rustpython_parser::ast::Expression","",10,N],[13,"Lambda","rustpython_parser::ast","",10,N],[12,"args","rustpython_parser::ast::Expression","",10,N],[12,"body","","",10,N],[13,"IfExpression","rustpython_parser::ast","",10,N],[12,"test","rustpython_parser::ast::Expression","",10,N],[12,"body","","",10,N],[12,"orelse","","",10,N],[13,"True","rustpython_parser::ast","",10,N],[13,"False","","",10,N],[13,"None","","",10,N],[4,"ComprehensionKind","","",N,N],[13,"GeneratorExpression","","",11,N],[12,"element","rustpython_parser::ast::ComprehensionKind","",11,N],[13,"List","rustpython_parser::ast","",11,N],[12,"element","rustpython_parser::ast::ComprehensionKind","",11,N],[13,"Set","rustpython_parser::ast","",11,N],[12,"element","rustpython_parser::ast::ComprehensionKind","",11,N],[13,"Dict","rustpython_parser::ast","",11,N],[12,"key","rustpython_parser::ast::ComprehensionKind","",11,N],[12,"value","","",11,N],[4,"Operator","rustpython_parser::ast","",N,N],[13,"Add","","",12,N],[13,"Sub","","",12,N],[13,"Mult","","",12,N],[13,"MatMult","","",12,N],[13,"Div","","",12,N],[13,"Mod","","",12,N],[13,"Pow","","",12,N],[13,"LShift","","",12,N],[13,"RShift","","",12,N],[13,"BitOr","","",12,N],[13,"BitXor","","",12,N],[13,"BitAnd","","",12,N],[13,"FloorDiv","","",12,N],[4,"BooleanOperator","","",N,N],[13,"And","","",13,N],[13,"Or","","",13,N],[4,"UnaryOperator","","",N,N],[13,"Pos","","",14,N],[13,"Neg","","",14,N],[13,"Not","","",14,N],[13,"Inv","","",14,N],[4,"Comparison","","",N,N],[13,"Equal","","",15,N],[13,"NotEqual","","",15,N],[13,"Less","","",15,N],[13,"LessOrEqual","","",15,N],[13,"Greater","","",15,N],[13,"GreaterOrEqual","","",15,N],[13,"In","","",15,N],[13,"NotIn","","",15,N],[13,"Is","","",15,N],[13,"IsNot","","",15,N],[4,"Number","","",N,N],[13,"Integer","","",16,N],[12,"value","rustpython_parser::ast::Number","",16,N],[13,"Float","rustpython_parser::ast","",16,N],[12,"value","rustpython_parser::ast::Number","",16,N],[13,"Complex","rustpython_parser::ast","",16,N],[12,"real","rustpython_parser::ast::Number","",16,N],[12,"imag","","",16,N],[4,"StringGroup","rustpython_parser::ast","",N,N],[13,"Constant","","",17,N],[12,"value","rustpython_parser::ast::StringGroup","",17,N],[13,"FormattedValue","rustpython_parser::ast","",17,N],[12,"value","rustpython_parser::ast::StringGroup","",17,N],[12,"spec","","",17,N],[13,"Joined","rustpython_parser::ast","",17,N],[12,"values","rustpython_parser::ast::StringGroup","",17,N],[6,"LocatedStatement","rustpython_parser::ast","",N,N],[11,"name","","Returns a short name for the node suitable for use in error messages.",10,[[["self"]],["str"]]],[0,"error","rustpython_parser","Define internal parse error types The goal is to provide a matching and a safe error API, maksing errors from LALR",N,N],[4,"ParseError","rustpython_parser::error","Represents an error during parsing",N,N],[13,"EOF","","Parser encountered an unexpected end of input",18,N],[13,"ExtraToken","","Parser encountered an extra token",18,N],[13,"InvalidToken","","Parser encountered an invalid token",18,N],[13,"UnrecognizedToken","","Parser encountered an unexpected token",18,N],[13,"Other","","Maps to `User` type from `lalrpop-util`",18,N],[0,"lexer","rustpython_parser","This module takes care of lexing python source text. This means source code is translated into separate tokens.",N,N],[3,"Lexer","rustpython_parser::lexer","",N,N],[3,"Location","","",N,N],[3,"NewlineHandler","","",N,N],[3,"LineContinationHandler","","",N,N],[4,"LexicalError","","",N,N],[13,"StringError","","",19,N],[13,"NestingError","","",19,N],[5,"get_keywords","","",N,[[],["hashmap",["string","tok"]]]],[5,"make_tokenizer","","",N,N],[6,"Spanned","","",N,N],[11,"new","","",20,[[["usize"],["usize"]],["self"]]],[11,"get_row","","",20,[[["self"]],["usize"]]],[11,"get_column","","",20,[[["self"]],["usize"]]],[11,"new","","",21,[[["t"]],["self"]]],[11,"new","","",22,[[["t"]],["self"]]],[11,"new","","",23,[[["t"]],["self"]]],[0,"parser","rustpython_parser","",N,N],[4,"FStringError","rustpython_parser::parser","",N,N],[13,"UnclosedLbrace","","",24,N],[13,"UnopenedRbrace","","",24,N],[13,"InvalidExpression","","",24,N],[5,"parse_program","","",N,[[["str"]],["result",["program","parseerror"]]]],[5,"parse_statement","","",N,[[["str"]],["result",["locatedstatement","parseerror"]]]],[5,"parse_expression","","Parses a python expression",N,[[["str"]],["result",["expression","parseerror"]]]],[5,"parse_fstring","","",N,[[["str"]],["result",["stringgroup","fstringerror"]]]],[0,"token","rustpython_parser","Different token definitions. Loosely based on token.h from CPython source:",N,N],[4,"Tok","rustpython_parser::token","Python source code can be tokenized in a sequence of these tokens.",N,N],[13,"Name","","",25,N],[12,"name","rustpython_parser::token::Tok","",25,N],[13,"Int","rustpython_parser::token","",25,N],[12,"value","rustpython_parser::token::Tok","",25,N],[13,"Float","rustpython_parser::token","",25,N],[12,"value","rustpython_parser::token::Tok","",25,N],[13,"Complex","rustpython_parser::token","",25,N],[12,"real","rustpython_parser::token::Tok","",25,N],[12,"imag","","",25,N],[13,"String","rustpython_parser::token","",25,N],[12,"value","rustpython_parser::token::Tok","",25,N],[12,"is_fstring","","",25,N],[13,"Bytes","rustpython_parser::token","",25,N],[12,"value","rustpython_parser::token::Tok","",25,N],[13,"Newline","rustpython_parser::token","",25,N],[13,"Indent","","",25,N],[13,"Dedent","","",25,N],[13,"StartProgram","","",25,N],[13,"StartStatement","","",25,N],[13,"StartExpression","","",25,N],[13,"Lpar","","",25,N],[13,"Rpar","","",25,N],[13,"Lsqb","","",25,N],[13,"Rsqb","","",25,N],[13,"Colon","","",25,N],[13,"Comma","","",25,N],[13,"Semi","","",25,N],[13,"Plus","","",25,N],[13,"Minus","","",25,N],[13,"Star","","",25,N],[13,"Slash","","",25,N],[13,"Vbar","","",25,N],[13,"Amper","","",25,N],[13,"Less","","",25,N],[13,"Greater","","",25,N],[13,"Equal","","",25,N],[13,"Dot","","",25,N],[13,"Percent","","",25,N],[13,"Lbrace","","",25,N],[13,"Rbrace","","",25,N],[13,"EqEqual","","",25,N],[13,"NotEqual","","",25,N],[13,"LessEqual","","",25,N],[13,"GreaterEqual","","",25,N],[13,"Tilde","","",25,N],[13,"CircumFlex","","",25,N],[13,"LeftShift","","",25,N],[13,"RightShift","","",25,N],[13,"DoubleStar","","",25,N],[13,"DoubleStarEqual","","",25,N],[13,"PlusEqual","","",25,N],[13,"MinusEqual","","",25,N],[13,"StarEqual","","",25,N],[13,"SlashEqual","","",25,N],[13,"PercentEqual","","",25,N],[13,"AmperEqual","","",25,N],[13,"VbarEqual","","",25,N],[13,"CircumflexEqual","","",25,N],[13,"LeftShiftEqual","","",25,N],[13,"RightShiftEqual","","",25,N],[13,"DoubleSlash","","",25,N],[13,"DoubleSlashEqual","","",25,N],[13,"At","","",25,N],[13,"AtEqual","","",25,N],[13,"Rarrow","","",25,N],[13,"Ellipsis","","",25,N],[13,"False","","",25,N],[13,"None","","",25,N],[13,"True","","",25,N],[13,"And","","",25,N],[13,"As","","",25,N],[13,"Assert","","",25,N],[13,"Break","","",25,N],[13,"Class","","",25,N],[13,"Continue","","",25,N],[13,"Def","","",25,N],[13,"Del","","",25,N],[13,"Elif","","",25,N],[13,"Else","","",25,N],[13,"Except","","",25,N],[13,"Finally","","",25,N],[13,"For","","",25,N],[13,"From","","",25,N],[13,"Global","","",25,N],[13,"If","","",25,N],[13,"Import","","",25,N],[13,"In","","",25,N],[13,"Is","","",25,N],[13,"Lambda","","",25,N],[13,"Nonlocal","","",25,N],[13,"Not","","",25,N],[13,"Or","","",25,N],[13,"Pass","","",25,N],[13,"Raise","","",25,N],[13,"Return","","",25,N],[13,"Try","","",25,N],[13,"While","","",25,N],[13,"With","","",25,N],[13,"Yield","","",25,N],[11,"into","rustpython_parser::ast","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","","",1,[[["self"]],["u"]]],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","","",10,[[["self"]],["u"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","rustpython_parser::error","",18,[[["self"]],["u"]]],[11,"to_string","","",18,[[["self"]],["string"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","rustpython_parser::lexer","",23,[[["self"]],["u"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"into_iter","","",23,[[["self"]],["i"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",20,[[["self"]],["u"]]],[11,"to_owned","","",20,[[["self"]],["t"]]],[11,"clone_into","","",20,N],[11,"from","","",20,[[["t"]],["t"]]],[11,"try_from","","",20,[[["u"]],["result"]]],[11,"borrow","","",20,[[["self"]],["t"]]],[11,"get_type_id","","",20,[[["self"]],["typeid"]]],[11,"try_into","","",20,[[["self"]],["result"]]],[11,"borrow_mut","","",20,[[["self"]],["t"]]],[11,"into","","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"into_iter","","",21,[[["self"]],["i"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"into_iter","","",22,[[["self"]],["i"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",19,[[["self"]],["u"]]],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","rustpython_parser::parser","",24,[[["self"]],["u"]]],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","rustpython_parser::token","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"next","rustpython_parser::lexer","",21,[[["self"]],["option"]]],[11,"next","","",22,[[["self"]],["option"]]],[11,"next","","",23,[[["self"]],["option"]]],[11,"default","rustpython_parser::ast","",4,[[],["parameters"]]],[11,"default","rustpython_parser::lexer","",20,[[],["location"]]],[11,"eq","rustpython_parser::ast","",8,[[["self"],["top"]],["bool"]]],[11,"ne","","",8,[[["self"],["top"]],["bool"]]],[11,"eq","","",0,[[["self"],["program"]],["bool"]]],[11,"ne","","",0,[[["self"],["program"]],["bool"]]],[11,"eq","","",1,[[["self"],["singleimport"]],["bool"]]],[11,"ne","","",1,[[["self"],["singleimport"]],["bool"]]],[11,"eq","","",2,[[["self"],["located"]],["bool"]]],[11,"ne","","",2,[[["self"],["located"]],["bool"]]],[11,"eq","","",9,[[["self"],["statement"]],["bool"]]],[11,"ne","","",9,[[["self"],["statement"]],["bool"]]],[11,"eq","","",3,[[["self"],["withitem"]],["bool"]]],[11,"ne","","",3,[[["self"],["withitem"]],["bool"]]],[11,"eq","","",10,[[["self"],["expression"]],["bool"]]],[11,"ne","","",10,[[["self"],["expression"]],["bool"]]],[11,"eq","","",4,[[["self"],["parameters"]],["bool"]]],[11,"ne","","",4,[[["self"],["parameters"]],["bool"]]],[11,"eq","","",11,[[["self"],["comprehensionkind"]],["bool"]]],[11,"ne","","",11,[[["self"],["comprehensionkind"]],["bool"]]],[11,"eq","","",5,[[["self"],["comprehension"]],["bool"]]],[11,"ne","","",5,[[["self"],["comprehension"]],["bool"]]],[11,"eq","","",6,[[["self"],["keyword"]],["bool"]]],[11,"ne","","",6,[[["self"],["keyword"]],["bool"]]],[11,"eq","","",7,[[["self"],["excepthandler"]],["bool"]]],[11,"ne","","",7,[[["self"],["excepthandler"]],["bool"]]],[11,"eq","","",12,[[["self"],["operator"]],["bool"]]],[11,"eq","","",13,[[["self"],["booleanoperator"]],["bool"]]],[11,"eq","","",14,[[["self"],["unaryoperator"]],["bool"]]],[11,"eq","","",15,[[["self"],["comparison"]],["bool"]]],[11,"eq","","",16,[[["self"],["number"]],["bool"]]],[11,"ne","","",16,[[["self"],["number"]],["bool"]]],[11,"eq","","",17,[[["self"],["stringgroup"]],["bool"]]],[11,"ne","","",17,[[["self"],["stringgroup"]],["bool"]]],[11,"eq","rustpython_parser::error","",18,[[["self"],["parseerror"]],["bool"]]],[11,"ne","","",18,[[["self"],["parseerror"]],["bool"]]],[11,"eq","rustpython_parser::lexer","",20,[[["self"],["location"]],["bool"]]],[11,"ne","","",20,[[["self"],["location"]],["bool"]]],[11,"eq","rustpython_parser::parser","",24,[[["self"],["fstringerror"]],["bool"]]],[11,"eq","rustpython_parser::token","",25,[[["self"],["tok"]],["bool"]]],[11,"ne","","",25,[[["self"],["tok"]],["bool"]]],[11,"from","rustpython_parser::error","",18,[[["innererror",["location","tok","lexicalerror"]]],["self"]]],[11,"clone","rustpython_parser::lexer","",20,[[["self"]],["location"]]],[11,"fmt","rustpython_parser::error","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_parser::ast","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",0,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",9,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_parser::error","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_parser::lexer","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",20,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_parser::parser","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_parser::token","",25,[[["self"],["formatter"]],["result"]]],[11,"source","rustpython_parser::error","",18,[[["self"]],["option",["error"]]]]],"paths":[[3,"Program"],[3,"SingleImport"],[3,"Located"],[3,"WithItem"],[3,"Parameters"],[3,"Comprehension"],[3,"Keyword"],[3,"ExceptHandler"],[4,"Top"],[4,"Statement"],[4,"Expression"],[4,"ComprehensionKind"],[4,"Operator"],[4,"BooleanOperator"],[4,"UnaryOperator"],[4,"Comparison"],[4,"Number"],[4,"StringGroup"],[4,"ParseError"],[4,"LexicalError"],[3,"Location"],[3,"NewlineHandler"],[3,"LineContinationHandler"],[3,"Lexer"],[4,"FStringError"],[4,"Tok"]]};
searchIndex["rustpython_vm"]={"doc":"This crate contains most python logic.","items":[[3,"VirtualMachine","rustpython_vm","Top level container of a python virtual machine. In theory you could create more instances of this struct and have them operate fully isolated.",N,N],[12,"builtins","","",0,N],[12,"sys_module","","",0,N],[12,"stdlib_inits","","",0,N],[12,"ctx","","",0,N],[12,"current_frame","","",0,N],[12,"wasm_id","","",0,N],[5,"print_exception","","",N,[[["virtualmachine"],["pyobjectref"]]]],[0,"macros","","",N,N],[0,"bytecode","","Implement python as a virtual machine with bytecodes. This module implements bytecode structure.",N,N],[3,"CodeObject","rustpython_vm::bytecode","Primary container of a single code object. Each python function has a codeobject. Also a module has a codeobject.",N,N],[12,"instructions","","",1,N],[12,"label_map","","",1,N],[12,"locations","","",1,N],[12,"arg_names","","",1,N],[12,"varargs","","",1,N],[12,"kwonlyarg_names","","",1,N],[12,"varkeywords","","",1,N],[12,"source_path","","",1,N],[12,"first_line_number","","",1,N],[12,"obj_name","","",1,N],[12,"is_generator","","",1,N],[3,"FunctionOpArg","","",N,N],[4,"Instruction","","A Single bytecode instruction.",N,N],[13,"Import","","",2,N],[12,"name","rustpython_vm::bytecode::Instruction","",2,N],[12,"symbol","","",2,N],[13,"ImportStar","rustpython_vm::bytecode","",2,N],[12,"name","rustpython_vm::bytecode::Instruction","",2,N],[13,"LoadName","rustpython_vm::bytecode","",2,N],[12,"name","rustpython_vm::bytecode::Instruction","",2,N],[13,"StoreName","rustpython_vm::bytecode","",2,N],[12,"name","rustpython_vm::bytecode::Instruction","",2,N],[13,"DeleteName","rustpython_vm::bytecode","",2,N],[12,"name","rustpython_vm::bytecode::Instruction","",2,N],[13,"StoreSubscript","rustpython_vm::bytecode","",2,N],[13,"DeleteSubscript","","",2,N],[13,"StoreAttr","","",2,N],[12,"name","rustpython_vm::bytecode::Instruction","",2,N],[13,"DeleteAttr","rustpython_vm::bytecode","",2,N],[12,"name","rustpython_vm::bytecode::Instruction","",2,N],[13,"LoadConst","rustpython_vm::bytecode","",2,N],[12,"value","rustpython_vm::bytecode::Instruction","",2,N],[13,"UnaryOperation","rustpython_vm::bytecode","",2,N],[12,"op","rustpython_vm::bytecode::Instruction","",2,N],[13,"BinaryOperation","rustpython_vm::bytecode","",2,N],[12,"op","rustpython_vm::bytecode::Instruction","",2,N],[12,"inplace","","",2,N],[13,"LoadAttr","rustpython_vm::bytecode","",2,N],[12,"name","rustpython_vm::bytecode::Instruction","",2,N],[13,"CompareOperation","rustpython_vm::bytecode","",2,N],[12,"op","rustpython_vm::bytecode::Instruction","",2,N],[13,"Pop","rustpython_vm::bytecode","",2,N],[13,"Rotate","","",2,N],[12,"amount","rustpython_vm::bytecode::Instruction","",2,N],[13,"Duplicate","rustpython_vm::bytecode","",2,N],[13,"GetIter","","",2,N],[13,"Pass","","",2,N],[13,"Continue","","",2,N],[13,"Break","","",2,N],[13,"Jump","","",2,N],[12,"target","rustpython_vm::bytecode::Instruction","",2,N],[13,"JumpIf","rustpython_vm::bytecode","",2,N],[12,"target","rustpython_vm::bytecode::Instruction","",2,N],[13,"JumpIfFalse","rustpython_vm::bytecode","",2,N],[12,"target","rustpython_vm::bytecode::Instruction","",2,N],[13,"MakeFunction","rustpython_vm::bytecode","",2,N],[12,"flags","rustpython_vm::bytecode::Instruction","",2,N],[13,"CallFunction","rustpython_vm::bytecode","",2,N],[12,"typ","rustpython_vm::bytecode::Instruction","",2,N],[13,"ForIter","rustpython_vm::bytecode","",2,N],[12,"target","rustpython_vm::bytecode::Instruction","",2,N],[13,"ReturnValue","rustpython_vm::bytecode","",2,N],[13,"YieldValue","","",2,N],[13,"YieldFrom","","",2,N],[13,"SetupLoop","","",2,N],[12,"start","rustpython_vm::bytecode::Instruction","",2,N],[12,"end","","",2,N],[13,"SetupExcept","rustpython_vm::bytecode","",2,N],[12,"handler","rustpython_vm::bytecode::Instruction","",2,N],[13,"SetupWith","rustpython_vm::bytecode","",2,N],[12,"end","rustpython_vm::bytecode::Instruction","",2,N],[13,"CleanupWith","rustpython_vm::bytecode","",2,N],[12,"end","rustpython_vm::bytecode::Instruction","",2,N],[13,"PopBlock","rustpython_vm::bytecode","",2,N],[13,"Raise","","",2,N],[12,"argc","rustpython_vm::bytecode::Instruction","",2,N],[13,"BuildString","rustpython_vm::bytecode","",2,N],[12,"size","rustpython_vm::bytecode::Instruction","",2,N],[13,"BuildTuple","rustpython_vm::bytecode","",2,N],[12,"size","rustpython_vm::bytecode::Instruction","",2,N],[12,"unpack","","",2,N],[13,"BuildList","rustpython_vm::bytecode","",2,N],[12,"size","rustpython_vm::bytecode::Instruction","",2,N],[12,"unpack","","",2,N],[13,"BuildSet","rustpython_vm::bytecode","",2,N],[12,"size","rustpython_vm::bytecode::Instruction","",2,N],[12,"unpack","","",2,N],[13,"BuildMap","rustpython_vm::bytecode","",2,N],[12,"size","rustpython_vm::bytecode::Instruction","",2,N],[12,"unpack","","",2,N],[13,"BuildSlice","rustpython_vm::bytecode","",2,N],[12,"size","rustpython_vm::bytecode::Instruction","",2,N],[13,"ListAppend","rustpython_vm::bytecode","",2,N],[12,"i","rustpython_vm::bytecode::Instruction","",2,N],[13,"SetAdd","rustpython_vm::bytecode","",2,N],[12,"i","rustpython_vm::bytecode::Instruction","",2,N],[13,"MapAdd","rustpython_vm::bytecode","",2,N],[12,"i","rustpython_vm::bytecode::Instruction","",2,N],[13,"PrintExpr","rustpython_vm::bytecode","",2,N],[13,"LoadBuildClass","","",2,N],[13,"StoreLocals","","",2,N],[13,"UnpackSequence","","",2,N],[12,"size","rustpython_vm::bytecode::Instruction","",2,N],[13,"UnpackEx","rustpython_vm::bytecode","",2,N],[12,"before","rustpython_vm::bytecode::Instruction","",2,N],[12,"after","","",2,N],[13,"Unpack","rustpython_vm::bytecode","",2,N],[13,"FormatValue","","",2,N],[12,"spec","rustpython_vm::bytecode::Instruction","",2,N],[4,"CallType","rustpython_vm::bytecode","",N,N],[13,"Positional","","",3,N],[13,"Keyword","","",3,N],[13,"Ex","","",3,N],[4,"Constant","","",N,N],[13,"Integer","","",4,N],[12,"value","rustpython_vm::bytecode::Constant","",4,N],[13,"Float","rustpython_vm::bytecode","",4,N],[12,"value","rustpython_vm::bytecode::Constant","",4,N],[13,"Complex","rustpython_vm::bytecode","",4,N],[12,"value","rustpython_vm::bytecode::Constant","",4,N],[13,"Boolean","rustpython_vm::bytecode","",4,N],[12,"value","rustpython_vm::bytecode::Constant","",4,N],[13,"String","rustpython_vm::bytecode","",4,N],[12,"value","rustpython_vm::bytecode::Constant","",4,N],[13,"Bytes","rustpython_vm::bytecode","",4,N],[12,"value","rustpython_vm::bytecode::Constant","",4,N],[13,"Code","rustpython_vm::bytecode","",4,N],[12,"code","rustpython_vm::bytecode::Constant","",4,N],[13,"Tuple","rustpython_vm::bytecode","",4,N],[12,"elements","rustpython_vm::bytecode::Constant","",4,N],[13,"None","rustpython_vm::bytecode","",4,N],[4,"ComparisonOperator","","",N,N],[13,"Greater","","",5,N],[13,"GreaterOrEqual","","",5,N],[13,"Less","","",5,N],[13,"LessOrEqual","","",5,N],[13,"Equal","","",5,N],[13,"NotEqual","","",5,N],[13,"In","","",5,N],[13,"NotIn","","",5,N],[13,"Is","","",5,N],[13,"IsNot","","",5,N],[4,"BinaryOperator","","",N,N],[13,"Power","","",6,N],[13,"Multiply","","",6,N],[13,"MatrixMultiply","","",6,N],[13,"Divide","","",6,N],[13,"FloorDivide","","",6,N],[13,"Modulo","","",6,N],[13,"Add","","",6,N],[13,"Subtract","","",6,N],[13,"Subscript","","",6,N],[13,"Lshift","","",6,N],[13,"Rshift","","",6,N],[13,"And","","",6,N],[13,"Xor","","",6,N],[13,"Or","","",6,N],[4,"UnaryOperator","","",N,N],[13,"Not","","",7,N],[13,"Invert","","",7,N],[13,"Minus","","",7,N],[13,"Plus","","",7,N],[6,"Label","","",N,N],[18,"HAS_DEFAULTS","","",8,N],[11,"empty","","Returns an empty set of flags.",8,[[],["functionoparg"]]],[11,"all","","Returns the set containing all flags.",8,[[],["functionoparg"]]],[11,"bits","","Returns the raw value of the flags currently stored.",8,[[["self"]],["u8"]]],[11,"from_bits","","Convert from underlying bit representation, unless that representation contains bits that do not correspond to a flag.",8,[[["u8"]],["option",["functionoparg"]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any bits that do not correspond to flags.",8,[[["u8"]],["functionoparg"]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",8,[[["self"]],["bool"]]],[11,"is_all","","Returns `true` if all flags are currently set.",8,[[["self"]],["bool"]]],[11,"intersects","","Returns `true` if there are flags common to both `self` and `other`.",8,[[["self"],["functionoparg"]],["bool"]]],[11,"contains","","Returns `true` all of the flags in `other` are contained within `self`.",8,[[["self"],["functionoparg"]],["bool"]]],[11,"insert","","Inserts the specified flags in-place.",8,[[["self"],["functionoparg"]]]],[11,"remove","","Removes the specified flags in-place.",8,[[["self"],["functionoparg"]]]],[11,"toggle","","Toggles the specified flags in-place.",8,[[["self"],["functionoparg"]]]],[11,"set","","Inserts or removes the specified flags depending on the passed value.",8,[[["self"],["functionoparg"],["bool"]]]],[11,"new","","",1,[[["vec",["string"]],["option",["option"]],["vec",["string"]],["option",["option"]],["string"],["usize"],["string"]],["codeobject"]]],[11,"get_constants","","",1,N],[0,"compile","rustpython_vm","Take an AST and transform it into bytecode",N,N],[4,"Mode","rustpython_vm::compile","",N,N],[13,"Exec","","",9,N],[13,"Eval","","",9,N],[13,"Single","","",9,N],[5,"compile","","Compile a given sourcecode into a bytecode object.",N,[[["str"],["mode"],["string"],["pyobjectref"]],["result",["pyobjectref","compileerror"]]]],[0,"error","rustpython_vm","",N,N],[4,"CompileError","rustpython_vm::error","",N,N],[13,"Assign","","Invalid assignment, cannot store value in target.",10,N],[13,"Delete","","Invalid delete",10,N],[13,"ExpectExpr","","Expected an expression got a statement",10,N],[13,"Parse","","Parser error",10,N],[13,"StarArgs","","Multiple `*` detected",10,N],[13,"InvalidBreak","","Break statement outside of loop.",10,N],[13,"InvalidContinue","","Continue statement outside of loop.",10,N],[0,"eval","rustpython_vm","",N,N],[5,"eval","rustpython_vm::eval","",N,[[["virtualmachine"],["str"],["pyobjectref"],["str"]],["pyresult"]]],[0,"format","rustpython_vm","",N,N],[3,"FormatSpec","rustpython_vm::format","",N,N],[3,"FormatString","","",N,N],[12,"format_parts","","",11,N],[4,"FormatAlign","","",N,N],[13,"Left","","",12,N],[13,"Right","","",12,N],[13,"AfterSign","","",12,N],[13,"Center","","",12,N],[4,"FormatSign","","",N,N],[13,"Plus","","",13,N],[13,"Minus","","",13,N],[13,"MinusOrSpace","","",13,N],[4,"FormatGrouping","","",N,N],[13,"Comma","","",14,N],[13,"Underscore","","",14,N],[4,"FormatType","","",N,N],[13,"String","","",15,N],[13,"Binary","","",15,N],[13,"Character","","",15,N],[13,"Decimal","","",15,N],[13,"Octal","","",15,N],[13,"HexLower","","",15,N],[13,"HexUpper","","",15,N],[13,"Number","","",15,N],[13,"ExponentLower","","",15,N],[13,"ExponentUpper","","",15,N],[13,"GeneralFormatLower","","",15,N],[13,"GeneralFormatUpper","","",15,N],[13,"FixedPointLower","","",15,N],[13,"FixedPointUpper","","",15,N],[4,"FormatParseError","","",N,N],[13,"UnmatchedBracket","","",16,N],[13,"MissingStartBracket","","",16,N],[13,"UnescapedStartBracketInLiteral","","",16,N],[4,"FormatPart","","",N,N],[13,"AutoSpec","","",17,N],[13,"IndexSpec","","",17,N],[13,"KeywordSpec","","",17,N],[13,"Literal","","",17,N],[11,"parse","","",18,[[["str"]],["formatspec"]]],[11,"format_int","","",18,[[["self"],["bigint"]],["result",["string","str"]]]],[11,"is_auto","","",17,[[["self"]],["bool"]]],[11,"is_index","","",17,[[["self"]],["bool"]]],[0,"import","rustpython_vm","",N,N],[5,"import_module","rustpython_vm::import","",N,[[["virtualmachine"],["pathbuf"],["str"]],["pyresult"]]],[5,"import","","",N,[[["virtualmachine"],["pathbuf"],["str"],["option"]],["pyresult"]]],[0,"obj","rustpython_vm","This package contains the python basic/builtin types",N,N],[0,"objbool","rustpython_vm::obj","",N,N],[5,"boolval","rustpython_vm::obj::objbool","",N,[[["virtualmachine"],["pyobjectref"]],["result",["bool","pyobjectref"]]]],[5,"init","","",N,[[["pycontext"]]]],[5,"not","","",N,[[["virtualmachine"],["pyobjectref"]],["pyresult"]]],[5,"get_value","","",N,[[["pyobjectref"]],["bool"]]],[0,"objbytearray","rustpython_vm::obj","Implementation of the python bytearray object.",N,N],[5,"init","rustpython_vm::obj::objbytearray","Fill bytearray class methods dictionary.",N,[[["pycontext"]]]],[0,"objbytes","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objbytes","",N,[[["pycontext"]]]],[5,"get_value","","",N,N],[5,"get_mut_value","","",N,N],[0,"objcode","rustpython_vm::obj","Infamous code object. The python class `code`",N,N],[5,"init","rustpython_vm::obj::objcode","",N,[[["pycontext"]]]],[5,"get_value","","",N,[[["pyobjectref"]],["codeobject"]]],[0,"objcomplex","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objcomplex","",N,[[["pycontext"]]]],[5,"get_value","","",N,[[["pyobjectref"]],["complex64"]]],[0,"objdict","rustpython_vm::obj","",N,N],[5,"new","rustpython_vm::obj::objdict","",N,[[["pyobjectref"]],["pyobjectref"]]],[5,"get_elements","","",N,N],[5,"set_item","","",N,[[["pyobjectref"],["virtualmachine"],["pyobjectref"],["pyobjectref"]]]],[5,"set_item_in_content","","",N,[[["dictcontenttype"],["pyobjectref"],["pyobjectref"]]]],[5,"get_key_value_pairs","","",N,[[["pyobjectref"]],["vec"]]],[5,"get_key_value_pairs_from_content","","",N,[[["dictcontenttype"]],["vec"]]],[5,"get_item","","",N,[[["pyobjectref"],["pyobjectref"]],["option",["pyobjectref"]]]],[5,"get_key_str","","",N,[[["pyobjectref"],["str"]],["option",["pyobjectref"]]]],[5,"content_get_key_str","","Retrieve a key from dict contents:",N,[[["dictcontenttype"],["str"]],["option",["pyobjectref"]]]],[5,"contains_key_str","","",N,[[["pyobjectref"],["str"]],["bool"]]],[5,"content_contains_key_str","","",N,[[["dictcontenttype"],["str"]],["bool"]]],[5,"py_dict_to_attributes","","Take a python dictionary and convert it to attributes.",N,[[["pyobjectref"]],["pyattributes"]]],[5,"attributes_to_py_dict","","",N,[[["virtualmachine"],["pyattributes"]],["pyresult"]]],[5,"dict_contains","","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"create_type","","",N,[[["pyobjectref"],["pyobjectref"],["pyobjectref"]]]],[5,"init","","",N,[[["pycontext"]]]],[6,"DictContentType","","",N,N],[0,"objenumerate","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objenumerate","",N,[[["pycontext"]]]],[0,"objfilter","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objfilter","",N,[[["pycontext"]]]],[0,"objfloat","rustpython_vm::obj","",N,N],[5,"get_value","rustpython_vm::obj::objfloat","",N,[[["pyobjectref"]],["f64"]]],[5,"make_float","","",N,[[["virtualmachine"],["pyobjectref"]],["result",["f64","pyobjectref"]]]],[5,"init","","",N,[[["pycontext"]]]],[0,"objframe","rustpython_vm::obj","The python `frame` type.",N,N],[5,"init","rustpython_vm::obj::objframe","",N,[[["pycontext"]]]],[5,"get_value","","",N,[[["pyobjectref"]],["frame"]]],[0,"objfunction","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objfunction","",N,[[["pycontext"]]]],[0,"objgenerator","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objgenerator","",N,[[["pycontext"]]]],[5,"new_generator","","",N,[[["virtualmachine"],["frame"]],["pyresult"]]],[0,"objint","rustpython_vm::obj","",N,N],[5,"to_int","rustpython_vm::obj::objint","",N,[[["virtualmachine"],["pyobjectref"],["u32"]],["result",["bigint","pyobjectref"]]]],[5,"get_value","","",N,[[["pyobjectref"]],["bigint"]]],[5,"init","","",N,[[["pycontext"]]]],[0,"objiter","rustpython_vm::obj","",N,N],[5,"get_iter","rustpython_vm::obj::objiter","",N,[[["virtualmachine"],["pyobjectref"]],["pyresult"]]],[5,"call_next","","",N,[[["virtualmachine"],["pyobjectref"]],["pyresult"]]],[5,"get_next_object","","",N,[[["virtualmachine"],["pyobjectref"]],["result",["option","pyobjectref"]]]],[5,"get_all","","",N,[[["virtualmachine"],["pyobjectref"]],["result",["vec","pyobjectref"]]]],[5,"new_stop_iteration","","",N,[[["virtualmachine"]],["pyobjectref"]]],[5,"iter_type_init","","Common setup for iter types, adds iter and contains methods",N,[[["pycontext"],["pyobjectref"]]]],[5,"init","","",N,[[["pycontext"]]]],[0,"objlist","rustpython_vm::obj","",N,N],[5,"list_append","rustpython_vm::obj::objlist","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"list_extend","","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"init","","",N,[[["pycontext"]]]],[0,"objmap","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objmap","",N,[[["pycontext"]]]],[0,"objmemory","rustpython_vm::obj","",N,N],[5,"new_memory_view","rustpython_vm::obj::objmemory","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"init","","",N,[[["pycontext"]]]],[0,"objnone","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objnone","",N,[[["pycontext"]]]],[0,"objobject","rustpython_vm::obj","",N,N],[5,"new_instance","rustpython_vm::obj::objobject","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"create_object","","",N,[[["pyobjectref"],["pyobjectref"],["pyobjectref"]]]],[5,"init","","",N,[[["pycontext"]]]],[0,"objproperty","rustpython_vm::obj","Python `property` descriptor class.",N,N],[5,"init","rustpython_vm::obj::objproperty","",N,[[["pycontext"]]]],[0,"objrange","rustpython_vm::obj","",N,N],[3,"RangeType","rustpython_vm::obj::objrange","",N,N],[12,"start","","",19,N],[12,"end","","",19,N],[12,"step","","",19,N],[5,"get_value","","",N,[[["pyobjectref"]],["rangetype"]]],[5,"init","","",N,[[["pycontext"]]]],[11,"try_len","","",19,[[["self"]],["option",["usize"]]]],[11,"len","","",19,[[["self"]],["usize"]]],[11,"contains","","",19,[[["self"],["bigint"]],["bool"]]],[11,"index_of","","",19,[[["self"],["bigint"]],["option",["bigint"]]]],[11,"count","","",19,[[["self"],["bigint"]],["usize"]]],[11,"is_empty","","",19,[[["self"]],["bool"]]],[11,"forward","","",19,[[["self"]],["bool"]]],[11,"get","","",19,[[["self"],["t"]],["option",["bigint"]]]],[11,"reversed","","",19,[[["self"]],["self"]]],[11,"repr","","",19,[[["self"]],["string"]]],[0,"objsequence","rustpython_vm::obj","",N,N],[5,"get_item","rustpython_vm::obj::objsequence","",N,N],[5,"seq_equal","","",N,N],[5,"seq_lt","","",N,N],[5,"seq_gt","","",N,N],[5,"seq_ge","","",N,N],[5,"seq_le","","",N,N],[5,"seq_mul","","",N,N],[5,"get_elements","","",N,N],[5,"get_mut_elements","","",N,N],[8,"PySliceableSequence","","",N,N],[10,"do_slice","","",20,[[["self"],["range",["usize"]]],["self"]]],[10,"do_slice_reverse","","",20,[[["self"],["range",["usize"]]],["self"]]],[10,"do_stepped_slice","","",20,[[["self"],["range",["usize"]],["usize"]],["self"]]],[10,"do_stepped_slice_reverse","","",20,[[["self"],["range",["usize"]],["usize"]],["self"]]],[10,"empty","","",20,[[],["self"]]],[10,"len","","",20,[[["self"]],["usize"]]],[10,"is_empty","","",20,[[["self"]],["bool"]]],[11,"get_pos","","",20,[[["self"],["i32"]],["option",["usize"]]]],[11,"get_slice_pos","","",20,[[["self"],["bigint"]],["usize"]]],[11,"get_slice_range","","",20,[[["self"],["option"],["option"]],["range",["usize"]]]],[11,"get_slice_items","","",20,[[["self"],["virtualmachine"],["pyobjectref"]],["result",["pyobjectref"]]]],[0,"objset","rustpython_vm::obj","",N,N],[5,"get_elements","rustpython_vm::obj::objset","",N,[[["pyobjectref"]],["hashmap",["u64","pyobjectref"]]]],[5,"set_contains","","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"init","","",N,[[["pycontext"]]]],[0,"objslice","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objslice","",N,[[["pycontext"]]]],[0,"objstr","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objstr","",N,[[["pycontext"]]]],[5,"get_value","","",N,[[["pyobjectref"]],["string"]]],[5,"borrow_value","","",N,[[["pyobjectref"]],["ref",["str"]]]],[5,"subscript","","",N,[[["virtualmachine"],["str"],["pyobjectref"]],["pyresult"]]],[0,"objsuper","rustpython_vm::obj","Python `super` class.",N,N],[5,"init","rustpython_vm::obj::objsuper","",N,[[["pycontext"]]]],[0,"objtuple","rustpython_vm::obj","",N,N],[5,"tuple_index","rustpython_vm::obj::objtuple","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"tuple_contains","","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"init","","",N,[[["pycontext"]]]],[0,"objtype","rustpython_vm::obj","",N,N],[5,"create_type","rustpython_vm::obj::objtype","",N,[[["pyobjectref"],["pyobjectref"],["pyobjectref"]]]],[5,"init","","",N,[[["pycontext"]]]],[5,"base_classes","","",N,[[["pyobjectref"]],["vec",["pyobjectref"]]]],[5,"isinstance","","",N,[[["pyobjectref"],["pyobjectref"]],["bool"]]],[5,"issubclass","","",N,[[["pyobjectref"],["pyobjectref"]],["bool"]]],[5,"get_type_name","","",N,[[["pyobjectref"]],["string"]]],[5,"type_new","","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"type_call","","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"type_getattribute","","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"get_attributes","","",N,[[["pyobjectref"]],["pyattributes"]]],[5,"new","","",N,[[["pyobjectref"],["str"],["vec",["pyobjectref"]],["hashmap",["string","pyobjectref"]]],["pyresult"]]],[0,"objzip","rustpython_vm::obj","",N,N],[5,"init","rustpython_vm::obj::objzip","",N,[[["pycontext"]]]],[0,"pyobject","rustpython_vm","",N,N],[3,"PyContext","rustpython_vm::pyobject","",N,N],[12,"bytes_type","","",21,N],[12,"bytearray_type","","",21,N],[12,"bool_type","","",21,N],[12,"classmethod_type","","",21,N],[12,"code_type","","",21,N],[12,"dict_type","","",21,N],[12,"enumerate_type","","",21,N],[12,"filter_type","","",21,N],[12,"float_type","","",21,N],[12,"frame_type","","",21,N],[12,"frozenset_type","","",21,N],[12,"generator_type","","",21,N],[12,"int_type","","",21,N],[12,"iter_type","","",21,N],[12,"complex_type","","",21,N],[12,"true_value","","",21,N],[12,"false_value","","",21,N],[12,"list_type","","",21,N],[12,"map_type","","",21,N],[12,"memoryview_type","","",21,N],[12,"none","","",21,N],[12,"not_implemented","","",21,N],[12,"tuple_type","","",21,N],[12,"set_type","","",21,N],[12,"staticmethod_type","","",21,N],[12,"super_type","","",21,N],[12,"str_type","","",21,N],[12,"range_type","","",21,N],[12,"slice_type","","",21,N],[12,"type_type","","",21,N],[12,"zip_type","","",21,N],[12,"function_type","","",21,N],[12,"builtin_function_or_method_type","","",21,N],[12,"property_type","","",21,N],[12,"module_type","","",21,N],[12,"bound_method_type","","",21,N],[12,"member_descriptor_type","","",21,N],[12,"object","","",21,N],[12,"exceptions","","",21,N],[3,"Scope","","",N,N],[12,"locals","","",22,N],[12,"parent","","",22,N],[3,"PyObject","","This is an actual python object. It consists of a `typ` which is the python class, and carries some rust payload optionally. This rust payload can be a rust float or rust int in case of float and int objects.",N,N],[12,"payload","","",23,N],[12,"typ","","",23,N],[3,"PyFuncArgs","","The `PyFuncArgs` struct is one of the most used structs then creating a rust function that can be called from python. It holds both positional arguments, as well as keyword arguments passed to the function.",N,N],[12,"args","","",24,N],[12,"kwargs","","",24,N],[4,"PyObjectPayload","","Rather than determining the type of a python object, this enum is more a holder for the rust payload of a python object. It is more a carrier of rust data for a particular python object. Determine the python type by using for example the `.typ()` method on a python object.",N,N],[13,"String","","",25,N],[12,"value","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Integer","rustpython_vm::pyobject","",25,N],[12,"value","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Float","rustpython_vm::pyobject","",25,N],[12,"value","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Complex","rustpython_vm::pyobject","",25,N],[12,"value","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Bytes","rustpython_vm::pyobject","",25,N],[12,"value","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Sequence","rustpython_vm::pyobject","",25,N],[12,"elements","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Dict","rustpython_vm::pyobject","",25,N],[12,"elements","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Set","rustpython_vm::pyobject","",25,N],[12,"elements","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Iterator","rustpython_vm::pyobject","",25,N],[12,"position","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"iterated_obj","","",25,N],[13,"EnumerateIterator","rustpython_vm::pyobject","",25,N],[12,"counter","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"iterator","","",25,N],[13,"FilterIterator","rustpython_vm::pyobject","",25,N],[12,"predicate","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"iterator","","",25,N],[13,"MapIterator","rustpython_vm::pyobject","",25,N],[12,"mapper","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"iterators","","",25,N],[13,"ZipIterator","rustpython_vm::pyobject","",25,N],[12,"iterators","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Slice","rustpython_vm::pyobject","",25,N],[12,"start","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"stop","","",25,N],[12,"step","","",25,N],[13,"Range","rustpython_vm::pyobject","",25,N],[12,"range","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"MemoryView","rustpython_vm::pyobject","",25,N],[12,"obj","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Code","rustpython_vm::pyobject","",25,N],[12,"code","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Frame","rustpython_vm::pyobject","",25,N],[12,"frame","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Function","rustpython_vm::pyobject","",25,N],[12,"code","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"scope","","",25,N],[12,"defaults","","",25,N],[13,"Generator","rustpython_vm::pyobject","",25,N],[12,"frame","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"BoundMethod","rustpython_vm::pyobject","",25,N],[12,"function","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"object","","",25,N],[13,"Scope","rustpython_vm::pyobject","",25,N],[12,"scope","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Module","rustpython_vm::pyobject","",25,N],[12,"name","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"dict","","",25,N],[13,"None","rustpython_vm::pyobject","",25,N],[13,"NotImplemented","","",25,N],[13,"Class","","",25,N],[12,"name","rustpython_vm::pyobject::PyObjectPayload","",25,N],[12,"dict","","",25,N],[12,"mro","","",25,N],[13,"WeakRef","rustpython_vm::pyobject","",25,N],[12,"referent","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"Instance","rustpython_vm::pyobject","",25,N],[12,"dict","rustpython_vm::pyobject::PyObjectPayload","",25,N],[13,"RustFunction","rustpython_vm::pyobject","",25,N],[12,"function","rustpython_vm::pyobject::PyObjectPayload","",25,N],[5,"create_type","rustpython_vm::pyobject","",N,[[["str"],["pyobjectref"],["pyobjectref"],["pyobjectref"]],["pyobjectref"]]],[6,"PyRef","","",N,N],[6,"PyObjectRef","","The `PyObjectRef` is one of the most used types. It is a reference to a python object. A single python object can have multiple references, and this reference counting is accounted for by this type. Use the `.clone()` method to create a new reference and increment the amount of references to the python object by 1.",N,N],[6,"PyObjectWeakRef","","Same as PyObjectRef, except for being a weak reference.",N,N],[6,"PyResult","","Use this type for function which return a python object or and exception. Both the python object and the python exception are `PyObjectRef` types since exceptions are also python objects.",N,N],[6,"PyAttributes","","For attributes we do not use a dict, but a hashmap. This is probably faster, unordered, and only supports strings as keys.",N,N],[8,"IdProtocol","","",N,N],[10,"get_id","","",26,[[["self"]],["usize"]]],[10,"is","","",26,[[["self"],["pyobjectref"]],["bool"]]],[8,"FromPyObjectRef","","",N,N],[10,"from_pyobj","","",27,[[["pyobjectref"]],["self"]]],[8,"TypeProtocol","","",N,N],[10,"typ","","",28,[[["self"]],["pyobjectref"]]],[8,"ParentProtocol","","",N,N],[10,"has_parent","","",29,[[["self"]],["bool"]]],[10,"get_parent","","",29,[[["self"]],["pyobjectref"]]],[8,"AttributeProtocol","","",N,N],[10,"get_attr","","",30,[[["self"],["str"]],["option",["pyobjectref"]]]],[10,"has_attr","","",30,[[["self"],["str"]],["bool"]]],[8,"DictProtocol","","",N,N],[10,"contains_key","","",31,[[["self"],["str"]],["bool"]]],[10,"get_item","","",31,[[["self"],["str"]],["option",["pyobjectref"]]]],[10,"get_key_value_pairs","","",31,[[["self"]],["vec"]]],[8,"BufferProtocol","","",N,N],[10,"readonly","","",32,[[["self"]],["bool"]]],[11,"new","","",21,[[],["self"]]],[11,"bytearray_type","","",21,[[["self"]],["pyobjectref"]]],[11,"bytes_type","","",21,[[["self"]],["pyobjectref"]]],[11,"code_type","","",21,[[["self"]],["pyobjectref"]]],[11,"complex_type","","",21,[[["self"]],["pyobjectref"]]],[11,"dict_type","","",21,[[["self"]],["pyobjectref"]]],[11,"float_type","","",21,[[["self"]],["pyobjectref"]]],[11,"frame_type","","",21,[[["self"]],["pyobjectref"]]],[11,"int_type","","",21,[[["self"]],["pyobjectref"]]],[11,"list_type","","",21,[[["self"]],["pyobjectref"]]],[11,"set_type","","",21,[[["self"]],["pyobjectref"]]],[11,"range_type","","",21,[[["self"]],["pyobjectref"]]],[11,"slice_type","","",21,[[["self"]],["pyobjectref"]]],[11,"frozenset_type","","",21,[[["self"]],["pyobjectref"]]],[11,"bool_type","","",21,[[["self"]],["pyobjectref"]]],[11,"memoryview_type","","",21,[[["self"]],["pyobjectref"]]],[11,"tuple_type","","",21,[[["self"]],["pyobjectref"]]],[11,"iter_type","","",21,[[["self"]],["pyobjectref"]]],[11,"enumerate_type","","",21,[[["self"]],["pyobjectref"]]],[11,"filter_type","","",21,[[["self"]],["pyobjectref"]]],[11,"map_type","","",21,[[["self"]],["pyobjectref"]]],[11,"zip_type","","",21,[[["self"]],["pyobjectref"]]],[11,"str_type","","",21,[[["self"]],["pyobjectref"]]],[11,"super_type","","",21,[[["self"]],["pyobjectref"]]],[11,"function_type","","",21,[[["self"]],["pyobjectref"]]],[11,"builtin_function_or_method_type","","",21,[[["self"]],["pyobjectref"]]],[11,"property_type","","",21,[[["self"]],["pyobjectref"]]],[11,"classmethod_type","","",21,[[["self"]],["pyobjectref"]]],[11,"staticmethod_type","","",21,[[["self"]],["pyobjectref"]]],[11,"generator_type","","",21,[[["self"]],["pyobjectref"]]],[11,"bound_method_type","","",21,[[["self"]],["pyobjectref"]]],[11,"member_descriptor_type","","",21,[[["self"]],["pyobjectref"]]],[11,"type_type","","",21,[[["self"]],["pyobjectref"]]],[11,"none","","",21,[[["self"]],["pyobjectref"]]],[11,"not_implemented","","",21,[[["self"]],["pyobjectref"]]],[11,"object","","",21,[[["self"]],["pyobjectref"]]],[11,"new_object","","",21,[[["self"]],["pyobjectref"]]],[11,"new_int","","",21,[[["self"],["t"]],["pyobjectref"]]],[11,"new_float","","",21,[[["self"],["f64"]],["pyobjectref"]]],[11,"new_complex","","",21,[[["self"],["complex64"]],["pyobjectref"]]],[11,"new_str","","",21,[[["self"],["string"]],["pyobjectref"]]],[11,"new_bytes","","",21,[[["self"],["vec",["u8"]]],["pyobjectref"]]],[11,"new_bytearray","","",21,[[["self"],["vec",["u8"]]],["pyobjectref"]]],[11,"new_bool","","",21,[[["self"],["bool"]],["pyobjectref"]]],[11,"new_tuple","","",21,[[["self"],["vec",["pyobjectref"]]],["pyobjectref"]]],[11,"new_list","","",21,[[["self"],["vec",["pyobjectref"]]],["pyobjectref"]]],[11,"new_set","","",21,[[["self"]],["pyobjectref"]]],[11,"new_dict","","",21,[[["self"]],["pyobjectref"]]],[11,"new_class","","",21,[[["self"],["str"],["pyobjectref"]],["pyobjectref"]]],[11,"new_scope","","",21,[[["self"],["option",["pyobjectref"]]],["pyobjectref"]]],[11,"new_module","","",21,[[["self"],["str"],["pyobjectref"]],["pyobjectref"]]],[11,"new_rustfunc","","",21,[[["self"],["f"]],["pyobjectref"]]],[11,"new_rustfunc_from_box","","",21,[[["self"],["box",["fn"]]],["pyobjectref"]]],[11,"new_frame","","",21,[[["self"],["frame"]],["pyobjectref"]]],[11,"new_property","","",21,[[["self"],["f"]],["pyobjectref"]]],[11,"new_code_object","","",21,[[["self"],["codeobject"]],["pyobjectref"]]],[11,"new_function","","",21,[[["self"],["pyobjectref"],["pyobjectref"],["pyobjectref"]],["pyobjectref"]]],[11,"new_bound_method","","",21,[[["self"],["pyobjectref"],["pyobjectref"]],["pyobjectref"]]],[11,"new_member_descriptor","","",21,[[["self"],["f"]],["pyobjectref"]]],[11,"new_instance","","",21,[[["self"],["pyobjectref"],["option",["pyattributes"]]],["pyobjectref"]]],[11,"set_item","","",21,[[["self"],["pyobjectref"],["str"],["pyobjectref"]]]],[11,"get_attr","","",21,[[["self"],["pyobjectref"],["str"]],["option",["pyobjectref"]]]],[11,"set_attr","","",21,[[["self"],["pyobjectref"],["str"],["pyobjectref"]]]],[11,"unwrap_constant","","",21,[[["self"],["constant"]],["pyobjectref"]]],[11,"new","","",24,[[["vec",["pyobjectref"]],["vec",["string"]]],["pyfuncargs"]]],[11,"insert","","",24,[[["self"],["pyobjectref"]],["pyfuncargs"]]],[11,"shift","","",24,[[["self"]],["pyobjectref"]]],[11,"get_kwarg","","",24,[[["self"],["str"],["pyobjectref"]],["pyobjectref"]]],[11,"get_optional_kwarg","","",24,[[["self"],["str"]],["option",["pyobjectref"]]]],[11,"new","","",23,[[["pyobjectpayload"],["pyobjectref"]],["pyobjectref"]]],[11,"into_ref","","",23,[[["self"]],["pyobjectref"]]],[0,"stdlib","rustpython_vm","",N,N],[5,"get_module_inits","rustpython_vm::stdlib","",N,[[],["hashmap",["string","stdlibinitfunc"]]]],[0,"io","","",N,N],[5,"io_open","rustpython_vm::stdlib::io","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"mk_module","","",N,[[["pycontext"]],["pyobjectref"]]],[6,"StdlibInitFunc","rustpython_vm::stdlib","",N,N],[0,"util","rustpython_vm","",N,N],[5,"read_file","rustpython_vm::util","Read a file at `path` into a String",N,[[["path"]],["result",["string"]]]],[11,"new","rustpython_vm","Create a new `VirtualMachine` structure.",0,[[],["virtualmachine"]]],[11,"run_code_obj","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"new_str","","Create a new python string object.",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_bool","","Create a new python bool object.",0,[[["self"],["bool"]],["pyobjectref"]]],[11,"new_dict","","",0,[[["self"]],["pyobjectref"]]],[11,"new_exception","","",0,[[["self"],["pyobjectref"],["string"]],["pyobjectref"]]],[11,"new_type_error","","",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_unsupported_operand_error","","",0,[[["self"],["pyobjectref"],["pyobjectref"],["str"]],["pyobjectref"]]],[11,"new_os_error","","",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_value_error","","Create a new python ValueError object. Useful for raising errors from python functions implemented in rust.",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_key_error","","",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_index_error","","",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_not_implemented_error","","",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_zero_division_error","","",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_overflow_error","","",0,[[["self"],["string"]],["pyobjectref"]]],[11,"new_scope","","",0,[[["self"],["option",["pyobjectref"]]],["pyobjectref"]]],[11,"get_none","","",0,[[["self"]],["pyobjectref"]]],[11,"get_type","","",0,[[["self"]],["pyobjectref"]]],[11,"get_object","","",0,[[["self"]],["pyobjectref"]]],[11,"get_locals","","",0,[[["self"]],["pyobjectref"]]],[11,"context","","",0,[[["self"]],["pycontext"]]],[11,"get_builtin_scope","","",0,[[["self"]],["pyobjectref"]]],[11,"to_str","","",0,[[["self"],["pyobjectref"]],["pyresult"]]],[11,"to_pystr","","",0,[[["self"],["pyobjectref"]],["result",["string","pyobjectref"]]]],[11,"to_repr","","",0,[[["self"],["pyobjectref"]],["pyresult"]]],[11,"call_get_descriptor","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"call_method","","",0,[[["self"],["pyobjectref"],["str"],["vec",["pyobjectref"]]],["pyresult"]]],[11,"call_method_pyargs","","",0,[[["self"],["pyobjectref"],["str"],["pyfuncargs"]],["pyresult"]]],[11,"invoke","","",0,[[["self"],["pyobjectref"],["pyfuncargs"]],["pyresult"]]],[11,"extract_elements","","",0,[[["self"],["pyobjectref"]],["result",["vec","pyobjectref"]]]],[11,"get_attribute","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"del_attr","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"get_method","","",0,[[["self"],["pyobjectref"],["str"]],["pyresult"]]],[11,"call_or_unsupported","","Calls a method on `obj` passing `arg`, if the method exists.",0,[[["self"],["pyobjectref"],["pyobjectref"],["str"],["f"]],["pyresult"]]],[11,"call_or_reflection","","Calls a method, falling back to its reflection with the operands reversed, and then to the value provided by `unsupported`.",0,N],[11,"_sub","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_isub","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_add","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_iadd","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_mul","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_imul","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_matmul","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_imatmul","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_truediv","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_itruediv","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_floordiv","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_ifloordiv","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_pow","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_ipow","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_mod","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_imod","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_lshift","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_ilshift","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_rshift","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_irshift","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_xor","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_ixor","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_or","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_ior","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_and","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_iand","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_eq","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_ne","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_lt","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_le","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_gt","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[11,"_ge","","",0,[[["self"],["pyobjectref"],["pyobjectref"]],["pyresult"]]],[14,"replace_expr","","",N,N],[14,"count_tts","","",N,N],[14,"type_check","","",N,N],[14,"arg_check","","",N,N],[14,"no_kwargs","","",N,N],[11,"into","","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"into","rustpython_vm::bytecode","",1,[[["self"]],["u"]]],[11,"to_string","","",1,[[["self"]],["string"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",8,[[["self"]],["u"]]],[11,"to_owned","","",8,[[["self"]],["t"]]],[11,"clone_into","","",8,N],[11,"from","","",8,[[["t"]],["t"]]],[11,"try_from","","",8,[[["u"]],["result"]]],[11,"borrow","","",8,[[["self"]],["t"]]],[11,"get_type_id","","",8,[[["self"]],["typeid"]]],[11,"try_into","","",8,[[["self"]],["result"]]],[11,"borrow_mut","","",8,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"to_owned","","",3,[[["self"]],["t"]]],[11,"clone_into","","",3,N],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",4,[[["self"]],["u"]]],[11,"to_string","","",4,[[["self"]],["string"]]],[11,"to_owned","","",4,[[["self"]],["t"]]],[11,"clone_into","","",4,N],[11,"from","","",4,[[["t"]],["t"]]],[11,"try_from","","",4,[[["u"]],["result"]]],[11,"borrow","","",4,[[["self"]],["t"]]],[11,"get_type_id","","",4,[[["self"]],["typeid"]]],[11,"try_into","","",4,[[["self"]],["result"]]],[11,"borrow_mut","","",4,[[["self"]],["t"]]],[11,"into","","",5,[[["self"]],["u"]]],[11,"to_owned","","",5,[[["self"]],["t"]]],[11,"clone_into","","",5,N],[11,"from","","",5,[[["t"]],["t"]]],[11,"try_from","","",5,[[["u"]],["result"]]],[11,"borrow","","",5,[[["self"]],["t"]]],[11,"get_type_id","","",5,[[["self"]],["typeid"]]],[11,"try_into","","",5,[[["self"]],["result"]]],[11,"borrow_mut","","",5,[[["self"]],["t"]]],[11,"into","","",6,[[["self"]],["u"]]],[11,"to_owned","","",6,[[["self"]],["t"]]],[11,"clone_into","","",6,N],[11,"from","","",6,[[["t"]],["t"]]],[11,"try_from","","",6,[[["u"]],["result"]]],[11,"borrow","","",6,[[["self"]],["t"]]],[11,"get_type_id","","",6,[[["self"]],["typeid"]]],[11,"try_into","","",6,[[["self"]],["result"]]],[11,"borrow_mut","","",6,[[["self"]],["t"]]],[11,"into","","",7,[[["self"]],["u"]]],[11,"to_owned","","",7,[[["self"]],["t"]]],[11,"clone_into","","",7,N],[11,"from","","",7,[[["t"]],["t"]]],[11,"try_from","","",7,[[["u"]],["result"]]],[11,"borrow","","",7,[[["self"]],["t"]]],[11,"get_type_id","","",7,[[["self"]],["typeid"]]],[11,"try_into","","",7,[[["self"]],["result"]]],[11,"borrow_mut","","",7,[[["self"]],["t"]]],[11,"into","rustpython_vm::compile","",9,[[["self"]],["u"]]],[11,"from","","",9,[[["t"]],["t"]]],[11,"try_from","","",9,[[["u"]],["result"]]],[11,"borrow","","",9,[[["self"]],["t"]]],[11,"get_type_id","","",9,[[["self"]],["typeid"]]],[11,"try_into","","",9,[[["self"]],["result"]]],[11,"borrow_mut","","",9,[[["self"]],["t"]]],[11,"into","rustpython_vm::error","",10,[[["self"]],["u"]]],[11,"to_string","","",10,[[["self"]],["string"]]],[11,"from","","",10,[[["t"]],["t"]]],[11,"try_from","","",10,[[["u"]],["result"]]],[11,"borrow","","",10,[[["self"]],["t"]]],[11,"get_type_id","","",10,[[["self"]],["typeid"]]],[11,"try_into","","",10,[[["self"]],["result"]]],[11,"borrow_mut","","",10,[[["self"]],["t"]]],[11,"into","rustpython_vm::format","",18,[[["self"]],["u"]]],[11,"from","","",18,[[["t"]],["t"]]],[11,"try_from","","",18,[[["u"]],["result"]]],[11,"borrow","","",18,[[["self"]],["t"]]],[11,"get_type_id","","",18,[[["self"]],["typeid"]]],[11,"try_into","","",18,[[["self"]],["result"]]],[11,"borrow_mut","","",18,[[["self"]],["t"]]],[11,"into","","",11,[[["self"]],["u"]]],[11,"from","","",11,[[["t"]],["t"]]],[11,"try_from","","",11,[[["u"]],["result"]]],[11,"borrow","","",11,[[["self"]],["t"]]],[11,"get_type_id","","",11,[[["self"]],["typeid"]]],[11,"try_into","","",11,[[["self"]],["result"]]],[11,"borrow_mut","","",11,[[["self"]],["t"]]],[11,"into","","",12,[[["self"]],["u"]]],[11,"to_owned","","",12,[[["self"]],["t"]]],[11,"clone_into","","",12,N],[11,"from","","",12,[[["t"]],["t"]]],[11,"try_from","","",12,[[["u"]],["result"]]],[11,"borrow","","",12,[[["self"]],["t"]]],[11,"get_type_id","","",12,[[["self"]],["typeid"]]],[11,"try_into","","",12,[[["self"]],["result"]]],[11,"borrow_mut","","",12,[[["self"]],["t"]]],[11,"into","","",13,[[["self"]],["u"]]],[11,"to_owned","","",13,[[["self"]],["t"]]],[11,"clone_into","","",13,N],[11,"from","","",13,[[["t"]],["t"]]],[11,"try_from","","",13,[[["u"]],["result"]]],[11,"borrow","","",13,[[["self"]],["t"]]],[11,"get_type_id","","",13,[[["self"]],["typeid"]]],[11,"try_into","","",13,[[["self"]],["result"]]],[11,"borrow_mut","","",13,[[["self"]],["t"]]],[11,"into","","",14,[[["self"]],["u"]]],[11,"from","","",14,[[["t"]],["t"]]],[11,"try_from","","",14,[[["u"]],["result"]]],[11,"borrow","","",14,[[["self"]],["t"]]],[11,"get_type_id","","",14,[[["self"]],["typeid"]]],[11,"try_into","","",14,[[["self"]],["result"]]],[11,"borrow_mut","","",14,[[["self"]],["t"]]],[11,"into","","",15,[[["self"]],["u"]]],[11,"from","","",15,[[["t"]],["t"]]],[11,"try_from","","",15,[[["u"]],["result"]]],[11,"borrow","","",15,[[["self"]],["t"]]],[11,"get_type_id","","",15,[[["self"]],["typeid"]]],[11,"try_into","","",15,[[["self"]],["result"]]],[11,"borrow_mut","","",15,[[["self"]],["t"]]],[11,"into","","",16,[[["self"]],["u"]]],[11,"from","","",16,[[["t"]],["t"]]],[11,"try_from","","",16,[[["u"]],["result"]]],[11,"borrow","","",16,[[["self"]],["t"]]],[11,"get_type_id","","",16,[[["self"]],["typeid"]]],[11,"try_into","","",16,[[["self"]],["result"]]],[11,"borrow_mut","","",16,[[["self"]],["t"]]],[11,"into","","",17,[[["self"]],["u"]]],[11,"from","","",17,[[["t"]],["t"]]],[11,"try_from","","",17,[[["u"]],["result"]]],[11,"borrow","","",17,[[["self"]],["t"]]],[11,"get_type_id","","",17,[[["self"]],["typeid"]]],[11,"try_into","","",17,[[["self"]],["result"]]],[11,"borrow_mut","","",17,[[["self"]],["t"]]],[11,"into","rustpython_vm::obj::objrange","",19,[[["self"]],["u"]]],[11,"to_owned","","",19,[[["self"]],["t"]]],[11,"clone_into","","",19,N],[11,"from","","",19,[[["t"]],["t"]]],[11,"try_from","","",19,[[["u"]],["result"]]],[11,"borrow","","",19,[[["self"]],["t"]]],[11,"get_type_id","","",19,[[["self"]],["typeid"]]],[11,"try_into","","",19,[[["self"]],["result"]]],[11,"borrow_mut","","",19,[[["self"]],["t"]]],[11,"into","rustpython_vm::pyobject","",21,[[["self"]],["u"]]],[11,"from","","",21,[[["t"]],["t"]]],[11,"try_from","","",21,[[["u"]],["result"]]],[11,"borrow","","",21,[[["self"]],["t"]]],[11,"get_type_id","","",21,[[["self"]],["typeid"]]],[11,"try_into","","",21,[[["self"]],["result"]]],[11,"borrow_mut","","",21,[[["self"]],["t"]]],[11,"into","","",22,[[["self"]],["u"]]],[11,"from","","",22,[[["t"]],["t"]]],[11,"try_from","","",22,[[["u"]],["result"]]],[11,"borrow","","",22,[[["self"]],["t"]]],[11,"get_type_id","","",22,[[["self"]],["typeid"]]],[11,"try_into","","",22,[[["self"]],["result"]]],[11,"borrow_mut","","",22,[[["self"]],["t"]]],[11,"into","","",23,[[["self"]],["u"]]],[11,"to_string","","",23,[[["self"]],["string"]]],[11,"from","","",23,[[["t"]],["t"]]],[11,"try_from","","",23,[[["u"]],["result"]]],[11,"borrow","","",23,[[["self"]],["t"]]],[11,"get_type_id","","",23,[[["self"]],["typeid"]]],[11,"try_into","","",23,[[["self"]],["result"]]],[11,"borrow_mut","","",23,[[["self"]],["t"]]],[11,"into","","",24,[[["self"]],["u"]]],[11,"to_owned","","",24,[[["self"]],["t"]]],[11,"clone_into","","",24,N],[11,"from","","",24,[[["t"]],["t"]]],[11,"try_from","","",24,[[["u"]],["result"]]],[11,"borrow","","",24,[[["self"]],["t"]]],[11,"get_type_id","","",24,[[["self"]],["typeid"]]],[11,"try_into","","",24,[[["self"]],["result"]]],[11,"borrow_mut","","",24,[[["self"]],["t"]]],[11,"into","","",25,[[["self"]],["u"]]],[11,"from","","",25,[[["t"]],["t"]]],[11,"try_from","","",25,[[["u"]],["result"]]],[11,"borrow","","",25,[[["self"]],["t"]]],[11,"get_type_id","","",25,[[["self"]],["typeid"]]],[11,"try_into","","",25,[[["self"]],["result"]]],[11,"borrow_mut","","",25,[[["self"]],["t"]]],[11,"get_id","rustpython_vm","",33,[[["self"]],["usize"]]],[11,"is","","",33,[[["self"],["pyobjectref"]],["bool"]]],[11,"typ","","",33,[[["self"]],["pyobjectref"]]],[11,"typ","rustpython_vm::pyobject","",23,[[["self"]],["pyobjectref"]]],[11,"has_parent","rustpython_vm","",33,[[["self"]],["bool"]]],[11,"get_parent","","",33,[[["self"]],["pyobjectref"]]],[11,"get_attr","","",33,[[["self"],["str"]],["option",["pyobjectref"]]]],[11,"has_attr","","",33,[[["self"],["str"]],["bool"]]],[11,"contains_key","","",33,[[["self"],["str"]],["bool"]]],[11,"get_item","","",33,[[["self"],["str"]],["option",["pyobjectref"]]]],[11,"get_key_value_pairs","","",33,[[["self"]],["vec"]]],[11,"readonly","","",33,[[["self"]],["bool"]]],[11,"partial_cmp","rustpython_vm::bytecode","",8,[[["self"],["functionoparg"]],["option",["ordering"]]]],[11,"lt","","",8,[[["self"],["functionoparg"]],["bool"]]],[11,"le","","",8,[[["self"],["functionoparg"]],["bool"]]],[11,"gt","","",8,[[["self"],["functionoparg"]],["bool"]]],[11,"ge","","",8,[[["self"],["functionoparg"]],["bool"]]],[11,"default","rustpython_vm::pyobject","",24,[[],["pyfuncargs"]]],[11,"cmp","rustpython_vm::bytecode","",8,[[["self"],["functionoparg"]],["ordering"]]],[11,"eq","","",1,[[["self"],["codeobject"]],["bool"]]],[11,"ne","","",1,[[["self"],["codeobject"]],["bool"]]],[11,"eq","","",8,[[["self"],["functionoparg"]],["bool"]]],[11,"ne","","",8,[[["self"],["functionoparg"]],["bool"]]],[11,"eq","","",2,[[["self"],["instruction"]],["bool"]]],[11,"ne","","",2,[[["self"],["instruction"]],["bool"]]],[11,"eq","","",3,[[["self"],["calltype"]],["bool"]]],[11,"ne","","",3,[[["self"],["calltype"]],["bool"]]],[11,"eq","","",4,[[["self"],["constant"]],["bool"]]],[11,"ne","","",4,[[["self"],["constant"]],["bool"]]],[11,"eq","","",5,[[["self"],["comparisonoperator"]],["bool"]]],[11,"eq","","",6,[[["self"],["binaryoperator"]],["bool"]]],[11,"eq","","",7,[[["self"],["unaryoperator"]],["bool"]]],[11,"eq","rustpython_vm::format","",12,[[["self"],["formatalign"]],["bool"]]],[11,"eq","","",13,[[["self"],["formatsign"]],["bool"]]],[11,"eq","","",14,[[["self"],["formatgrouping"]],["bool"]]],[11,"eq","","",15,[[["self"],["formattype"]],["bool"]]],[11,"eq","","",18,[[["self"],["formatspec"]],["bool"]]],[11,"ne","","",18,[[["self"],["formatspec"]],["bool"]]],[11,"eq","","",16,[[["self"],["formatparseerror"]],["bool"]]],[11,"eq","","",17,[[["self"],["formatpart"]],["bool"]]],[11,"ne","","",17,[[["self"],["formatpart"]],["bool"]]],[11,"eq","","",11,[[["self"],["formatstring"]],["bool"]]],[11,"ne","","",11,[[["self"],["formatstring"]],["bool"]]],[11,"clone","rustpython_vm::bytecode","",1,[[["self"]],["codeobject"]]],[11,"clone","","",8,[[["self"]],["functionoparg"]]],[11,"clone","","",2,[[["self"]],["instruction"]]],[11,"clone","","",3,[[["self"]],["calltype"]]],[11,"clone","","",4,[[["self"]],["constant"]]],[11,"clone","","",5,[[["self"]],["comparisonoperator"]]],[11,"clone","","",6,[[["self"]],["binaryoperator"]]],[11,"clone","","",7,[[["self"]],["unaryoperator"]]],[11,"clone","rustpython_vm::format","",12,[[["self"]],["formatalign"]]],[11,"clone","","",13,[[["self"]],["formatsign"]]],[11,"clone","rustpython_vm::obj::objrange","",19,[[["self"]],["rangetype"]]],[11,"clone","rustpython_vm::pyobject","",24,[[["self"]],["pyfuncargs"]]],[11,"extend","rustpython_vm::bytecode","",8,[[["self"],["t"]]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_vm::error","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_vm::pyobject","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_vm::bytecode","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",2,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",3,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",4,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",5,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",6,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",7,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",1,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_vm::error","",10,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_vm::format","",12,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",13,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",14,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",15,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",18,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",16,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",17,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",11,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_vm::obj::objrange","",19,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_vm::pyobject","",21,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",22,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",23,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",24,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",25,[[["self"],["formatter"]],["result"]]],[11,"fmt","rustpython_vm::bytecode","",8,[[["self"],["formatter"]],["result"]]],[11,"fmt","","",8,[[["self"],["formatter"]],["result"]]],[11,"hash","","",8,N],[11,"sub","","Returns the set difference of the two sets of flags.",8,[[["self"],["functionoparg"]],["functionoparg"]]],[11,"sub_assign","","Disables all flags enabled in the set.",8,[[["self"],["functionoparg"]]]],[11,"not","","Returns the complement of this set of flags.",8,[[["self"]],["functionoparg"]]],[11,"bitand","","Returns the intersection between the two sets of flags.",8,[[["self"],["functionoparg"]],["functionoparg"]]],[11,"bitor","","Returns the union of the two sets of flags.",8,[[["self"],["functionoparg"]],["functionoparg"]]],[11,"bitxor","","Returns the left flags, but with all the right flags toggled.",8,[[["self"],["functionoparg"]],["functionoparg"]]],[11,"bitand_assign","","Disables all flags disabled in the set.",8,[[["self"],["functionoparg"]]]],[11,"bitor_assign","","Adds the set of flags.",8,[[["self"],["functionoparg"]]]],[11,"bitxor_assign","","Toggles the set of flags.",8,[[["self"],["functionoparg"]]]],[11,"from_iter","","",8,[[["t"]],["functionoparg"]]],[11,"from_str","rustpython_vm::format","",18,[[["str"]],["result"]]],[11,"from_str","","",11,[[["str"]],["result"]]],[11,"source","rustpython_vm::error","",10,[[["self"]],["option",["error"]]]]],"paths":[[3,"VirtualMachine"],[3,"CodeObject"],[4,"Instruction"],[4,"CallType"],[4,"Constant"],[4,"ComparisonOperator"],[4,"BinaryOperator"],[4,"UnaryOperator"],[3,"FunctionOpArg"],[4,"Mode"],[4,"CompileError"],[3,"FormatString"],[4,"FormatAlign"],[4,"FormatSign"],[4,"FormatGrouping"],[4,"FormatType"],[4,"FormatParseError"],[4,"FormatPart"],[3,"FormatSpec"],[3,"RangeType"],[8,"PySliceableSequence"],[3,"PyContext"],[3,"Scope"],[3,"PyObject"],[3,"PyFuncArgs"],[4,"PyObjectPayload"],[8,"IdProtocol"],[8,"FromPyObjectRef"],[8,"TypeProtocol"],[8,"ParentProtocol"],[8,"AttributeProtocol"],[8,"DictProtocol"],[8,"BufferProtocol"],[6,"PyObjectRef"]]};
searchIndex["rustpython_wasm"]={"doc":"","items":[[5,"setup_console_error","rustpython_wasm","",N,[[]]],[5,"eval_py","","Evaluate Python code",N,[[["string"],["option",["object"]]],["result",["jsvalue","jsvalue"]]]],[0,"convert","","",N,N],[5,"py_str_err","rustpython_wasm::convert","",N,[[["virtualmachine"],["pyobjectref"]],["string"]]],[5,"js_py_typeerror","","",N,[[["virtualmachine"],["jsvalue"]],["pyobjectref"]]],[5,"py_to_js","","",N,[[["virtualmachine"],["pyobjectref"]],["jsvalue"]]],[5,"object_entries","","",N,N],[5,"pyresult_to_jsresult","","",N,[[["virtualmachine"],["pyresult"]],["result",["jsvalue","jsvalue"]]]],[5,"js_to_py","","",N,[[["virtualmachine"],["jsvalue"]],["pyobjectref"]]],[0,"vm_class","rustpython_wasm","",N,N],[3,"VMStore","rustpython_wasm::vm_class","",N,N],[3,"AccessibleVM","","",N,N],[3,"AccessibleVMPtr","","",N,N],[3,"WASMVirtualMachine","","",N,N],[11,"init","","",0,[[["string"],["option",["bool"]]],["wasmvirtualmachine"]]],[11,"get","","",0,[[["string"]],["jsvalue"]]],[11,"destroy","","",0,[[["string"]]]],[11,"ids","","",0,[[],["vec",["jsvalue"]]]],[11,"from_id","","",1,[[["string"]],["accessiblevm"]]],[11,"from_vm","","",1,[[["virtualmachine"]],["accessiblevm"]]],[11,"upgrade","","",1,[[["self"]],["option",["accessiblevmptr"]]]],[11,"valid","","",2,[[["self"]],["bool"]]],[11,"assert_valid","","",2,[[["self"]],["result",["jsvalue"]]]],[11,"destroy","","",2,[[["self"]],["result",["jsvalue"]]]],[11,"add_to_scope","","",2,[[["self"],["string"],["jsvalue"]],["result",["jsvalue"]]]],[11,"set_stdout","","",2,[[["self"],["jsvalue"]],["result",["jsvalue"]]]],[11,"exec","","",2,[[["self"],["string"]],["result",["jsvalue","jsvalue"]]]],[11,"eval","","",2,[[["self"],["string"]],["result",["jsvalue","jsvalue"]]]],[0,"wasm_builtins","rustpython_wasm","Builtin function specific to WASM build.",N,N],[5,"print_to_html","rustpython_wasm::wasm_builtins","",N,[[["str"],["str"]],["result",["jsvalue"]]]],[5,"format_print_args","","",N,[[["virtualmachine"],["pyfuncargs"]],["result",["string","pyobjectref"]]]],[5,"builtin_print_html","","",N,[[["virtualmachine"],["pyfuncargs"],["str"]],["pyresult"]]],[5,"builtin_print_console","","",N,[[["virtualmachine"],["pyfuncargs"]],["pyresult"]]],[5,"setup_wasm_builtins","","",N,[[["virtualmachine"],["pyobjectref"]]]],[11,"into","rustpython_wasm::vm_class","",0,[[["self"]],["u"]]],[11,"from","","",0,[[["t"]],["t"]]],[11,"try_from","","",0,[[["u"]],["result"]]],[11,"borrow","","",0,[[["self"]],["t"]]],[11,"get_type_id","","",0,[[["self"]],["typeid"]]],[11,"try_into","","",0,[[["self"]],["result"]]],[11,"borrow_mut","","",0,[[["self"]],["t"]]],[11,"return_abi","","",0,N],[11,"into","","",1,[[["self"]],["u"]]],[11,"to_owned","","",1,[[["self"]],["t"]]],[11,"clone_into","","",1,N],[11,"from","","",1,[[["t"]],["t"]]],[11,"try_from","","",1,[[["u"]],["result"]]],[11,"borrow","","",1,[[["self"]],["t"]]],[11,"get_type_id","","",1,[[["self"]],["typeid"]]],[11,"try_into","","",1,[[["self"]],["result"]]],[11,"borrow_mut","","",1,[[["self"]],["t"]]],[11,"into","","",3,[[["self"]],["u"]]],[11,"from","","",3,[[["t"]],["t"]]],[11,"try_from","","",3,[[["u"]],["result"]]],[11,"borrow","","",3,[[["self"]],["t"]]],[11,"get_type_id","","",3,[[["self"]],["typeid"]]],[11,"try_into","","",3,[[["self"]],["result"]]],[11,"borrow_mut","","",3,[[["self"]],["t"]]],[11,"into","","",2,[[["self"]],["u"]]],[11,"to_owned","","",2,[[["self"]],["t"]]],[11,"clone_into","","",2,N],[11,"from","","",2,[[["t"]],["t"]]],[11,"try_from","","",2,[[["u"]],["result"]]],[11,"borrow","","",2,[[["self"]],["t"]]],[11,"get_type_id","","",2,[[["self"]],["typeid"]]],[11,"try_into","","",2,[[["self"]],["result"]]],[11,"borrow_mut","","",2,[[["self"]],["t"]]],[11,"return_abi","","",2,N],[11,"from","","",1,[[["wasmvirtualmachine"]],["accessiblevm"]]],[11,"from","","",1,[[["wasmvirtualmachine"]],["accessiblevm"]]],[11,"clone","","",1,[[["self"]],["accessiblevm"]]],[11,"clone","","",2,[[["self"]],["wasmvirtualmachine"]]],[11,"drop","","",3,[[["self"]]]],[11,"deref","","",3,[[["self"]],["virtualmachine"]]],[11,"deref_mut","","",3,[[["self"]],["virtualmachine"]]],[11,"from_abi","","",0,[[["u32"],["stack"]],["self"]]],[11,"from_abi","","",2,[[["u32"],["stack"]],["self"]]],[11,"describe","","",0,[[]]],[11,"describe","","",2,[[]]],[11,"into_abi","","",0,[[["self"],["stack"]],["u32"]]],[11,"into_abi","","",2,[[["self"],["stack"]],["u32"]]],[11,"ref_from_abi","","",0,N],[11,"ref_from_abi","","",2,N],[11,"ref_mut_from_abi","","",0,N],[11,"ref_mut_from_abi","","",2,N]],"paths":[[3,"VMStore"],[3,"AccessibleVM"],[3,"WASMVirtualMachine"],[3,"AccessibleVMPtr"]]};
initSearch(searchIndex);
